{"mappings":"YAAA,IAUIA,EACAC,EACAC,EACAC,EAbEC,EAAK,CACTC,KAAMC,SAASC,cAAc,SAC7BC,UAAWF,SAASC,cAAc,uBAClCE,SAAUH,SAASC,cAAc,sBACjCG,WAAYJ,SAASC,cAAc,wBACnCI,IAAKL,SAASC,cAAc,WAG9BH,EAAKC,KAAKO,iBAAiB,UAQ3B,SAAsBC,GACtBA,EAAMC,iBACJd,EAAMI,EAAKI,UAAUO,MACrBd,EAAKG,EAAKK,SAASM,MACnBb,EAAOE,EAAKM,WAAWK,MAkBzB,IAAK,IAAIC,EAAI,EAAGA,EAAId,EAAQc,GAAK,EAEZC,aAAY,WAlB/B,IAAuBC,EAAUC,GAAVD,EAmBrBf,GAAY,EAnBmBgB,EAoBPnB,EAlBjB,IAAIoB,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACvBC,YAAW,WACpBH,EACFF,EAAS,CAACM,SAAAT,EAAUU,MAAAT,IAEpBG,EAAQ,CAACK,SAAAT,EAAUU,MAAAT,G,GAEpBA,E,KAWNU,MAAK,SAAAC,G,IAAGC,EAAQD,EAARH,SAAUK,EAAKF,EAALF,MACjBK,QAAQC,IAAI,uBAAwCC,OAAfJ,EAAS,QAAYI,OAANH,EAAM,M,IAE3DI,OAAM,SAAAN,G,IAAGO,EAAQP,EAARH,SAAUW,EAAKR,EAALF,MAClBK,QAAQC,IAAI,sBAAqCC,OAAfE,EAAS,QAAYF,OAANG,EAAM,M,MAEpDtC,GAAOC,E","sources":["src/js/03-promises.js"],"sourcesContent":["const refs={\n  form: document.querySelector(\".form\"),\n  delayData: document.querySelector('input[name=\"delay\"]'),\n  stepData: document.querySelector('input[name=\"step\"]'),\n  amountData: document.querySelector('input[name=\"amount\"]'),\n  btn: document.querySelector(\"button\"),\n};\n\nrefs.form.addEventListener(\"submit\", handleSubmit);\n\nlet delay;\nlet step;\nlet amount;\nlet position; \n\n\nfunction handleSubmit(event) {\nevent.preventDefault();\n  delay=refs.delayData.value;\n  step=refs.stepData.value;\n  amount=refs.amountData.value;\n\n  function createPromise(position, delay) {\n  \n    return new Promise((resolve, reject) => {\n      const shouldResolve = Math.random() > 0.3;\n      const TimeId = setTimeout(() => {\n        if (shouldResolve) {\n          resolve ({position, delay})\n        } else {\n          reject ({position, delay})\n        }\n      }, delay);\n    }\n    ) \n  }\n\n\nfor (let i = 0; i < amount; i += 1) {\n  \n  const intervalId = setInterval(() => {\n    position += 1;\n    createPromise(position, delay)\n  .then(({ position, delay }) => {\n    console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n    }, delay+=step);\n\n  \n}\n}\n\n\n\n"],"names":["$ce04d3a99e08e73b$var$delay","$ce04d3a99e08e73b$var$step","$ce04d3a99e08e73b$var$amount","$ce04d3a99e08e73b$var$position","$ce04d3a99e08e73b$var$refs","form","document","querySelector","delayData","stepData","amountData","btn","addEventListener","event","preventDefault","value","i","setInterval","position1","delay1","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","position","delay","then","param","position2","delay2","console","log","concat","catch","position3","delay3"],"version":3,"file":"03-promises.47c8a63c.js.map"}